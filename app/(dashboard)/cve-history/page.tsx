"use client"

import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Search, Trash2, ExternalLink } from "lucide-react"
import { useSearchParams } from "next/navigation"
import { useEffect, useState } from "react"

export default function CVEHistoryPage() {
  const searchParams = useSearchParams()
  const [searchQuery, setSearchQuery] = useState("")

  useEffect(() => {
    const query = searchParams.get("search")
    if (query) {
      setSearchQuery(query)
    }
  }, [searchParams])

  return (
    <div className="flex flex-col gap-4">
      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
        <div>
          <h1 className="text-2xl md:text-3xl font-bold tracking-tight">CVE History</h1>
          <p className="text-muted-foreground">View and manage searched CVE records</p>
        </div>
        <Button>Export Data</Button>
      </div>

      <Card>
        <CardHeader className="p-4">
          <div className="flex flex-col sm:flex-row sm:items-center gap-4">
            <div className="flex items-center gap-2 w-full max-w-sm">
              <Search className="h-4 w-4 text-muted-foreground" />
              <Input
                placeholder="Filter CVE records..."
                className="h-9"
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
              />
            </div>
            <div className="flex items-center gap-2 ml-auto">
              <Button variant="outline" size="sm">
                Filter
              </Button>
              <Button variant="outline" size="sm">
                Sort
              </Button>
            </div>
          </div>
        </CardHeader>
        <CardContent className="p-0 overflow-auto">
          <div className="w-full min-w-[640px]">
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>CVE ID</TableHead>
                  <TableHead>CVSS Score</TableHead>
                  <TableHead>EPSS</TableHead>
                  <TableHead>Risk Level</TableHead>
                  <TableHead>Date Searched</TableHead>
                  <TableHead className="text-right">Actions</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {cveRecords.map((record) => (
                  <TableRow key={record.id}>
                    <TableCell className="font-medium font-mono">{record.cveId}</TableCell>
                    <TableCell>
                      <div className="flex items-center gap-2">
                        <span className="font-semibold">{record.cvss}</span>
                        <span
                          className={`text-xs px-2 py-0.5 rounded ${
                            record.cvss >= 9
                              ? "bg-red-100 text-red-700 dark:bg-red-900/20 dark:text-red-300"
                              : record.cvss >= 7
                                ? "bg-orange-100 text-orange-700 dark:bg-orange-900/20 dark:text-orange-300"
                                : record.cvss >= 4
                                  ? "bg-yellow-100 text-yellow-700 dark:bg-yellow-900/20 dark:text-yellow-300"
                                  : "bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-300"
                          }`}
                        >
                          {record.cvss >= 9
                            ? "Critical"
                            : record.cvss >= 7
                              ? "High"
                              : record.cvss >= 4
                                ? "Medium"
                                : "Low"}
                        </span>
                      </div>
                    </TableCell>
                    <TableCell>{(record.epss * 100).toFixed(1)}%</TableCell>
                    <TableCell>
                      <div
                        className={`inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-semibold ${
                          record.risk === "Critical"
                            ? "bg-red-50 text-red-700 dark:bg-red-900/20 dark:text-red-300"
                            : record.risk === "High"
                              ? "bg-orange-50 text-orange-700 dark:bg-orange-900/20 dark:text-orange-300"
                              : record.risk === "Medium"
                                ? "bg-yellow-50 text-yellow-700 dark:bg-yellow-900/20 dark:text-yellow-300"
                                : "bg-green-50 text-green-700 dark:bg-green-900/20 dark:text-green-300"
                        }`}
                      >
                        {record.risk}
                      </div>
                    </TableCell>
                    <TableCell>{record.dateSearched}</TableCell>
                    <TableCell className="text-right">
                      <div className="flex justify-end gap-2">
                        <Button variant="ghost" size="icon">
                          <ExternalLink className="h-4 w-4" />
                          <span className="sr-only">View details</span>
                        </Button>
                        <Button variant="ghost" size="icon">
                          <Trash2 className="h-4 w-4" />
                          <span className="sr-only">Delete record</span>
                        </Button>
                      </div>
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}

const cveRecords = [
  {
    id: "1",
    cveId: "CVE-2024-1234",
    cvss: 9.8,
    epss: 0.95,
    risk: "Critical",
    dateSearched: "2024-01-15",
  },
  {
    id: "2",
    cveId: "CVE-2024-5678",
    cvss: 7.5,
    epss: 0.72,
    risk: "High",
    dateSearched: "2024-01-14",
  },
  {
    id: "3",
    cveId: "CVE-2023-9876",
    cvss: 5.3,
    epss: 0.45,
    risk: "Medium",
    dateSearched: "2024-01-13",
  },
  {
    id: "4",
    cveId: "CVE-2023-4321",
    cvss: 8.1,
    epss: 0.88,
    risk: "High",
    dateSearched: "2024-01-12",
  },
  {
    id: "5",
    cveId: "CVE-2024-2468",
    cvss: 9.1,
    epss: 0.91,
    risk: "Critical",
    dateSearched: "2024-01-11",
  },
  {
    id: "6",
    cveId: "CVE-2023-7531",
    cvss: 4.3,
    epss: 0.28,
    risk: "Medium",
    dateSearched: "2024-01-10",
  },
  {
    id: "7",
    cveId: "CVE-2024-8642",
    cvss: 6.5,
    epss: 0.55,
    risk: "Medium",
    dateSearched: "2024-01-09",
  },
  {
    id: "8",
    cveId: "CVE-2023-1597",
    cvss: 9.8,
    epss: 0.97,
    risk: "Critical",
    dateSearched: "2024-01-08",
  },
]
